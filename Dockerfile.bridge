FROM golang:1.19-alpine AS builder

# 安装构建依赖
RUN apk add --no-cache git make gcc musl-dev libusb-dev eudev-dev

# 设置工作目录
WORKDIR /app

# 复制 go mod 文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建应用
RUN go build -o onekeyd .

# 运行阶段
FROM alpine:latest

# 安装运行时依赖
RUN apk add --no-cache ca-certificates curl libusb eudev netcat-openbsd

# 创建非root用户
RUN adduser -D -s /bin/sh onekey

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/onekeyd .

# 修改权限
RUN chown onekey:onekey /app/onekeyd
RUN chmod +x /app/onekeyd

# 创建启动脚本
RUN echo '#!/bin/sh\n\
set -e\n\
echo "Starting OneKey Bridge..."\n\
echo "HTTP Port: ${BRIDGE_PORT:-21321}"\n\
echo "Emulator Host: ${EMULATOR_HOST:-localhost}"\n\
echo "Emulator Port: ${EMULATOR_PORT:-54935}"\n\
./onekeyd -p ${BRIDGE_PORT:-21321} -e ${EMULATOR_PORT:-54935} -u=false\n\
' > /start-bridge.sh && chmod +x /start-bridge.sh

# 切换到非root用户
USER onekey

# 暴露端口
EXPOSE 21321

# 健康检查
HEALTHCHECK --interval=10s --timeout=5s --start-period=20s --retries=3 \
    CMD nc -z localhost ${BRIDGE_PORT:-21321} || exit 1

# 启动命令
CMD ["/start-bridge.sh"] 